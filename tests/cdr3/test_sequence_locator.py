# Pygor is part of the IGoR (Inference and Generation of Repertoires) software.
# Pygor Python package can be used to post process files generated by IGoR.
# Copyright (C) 2018 Quentin Marcou & Wout van Helvoirt

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


"""Test file for testing pygor.cdr3.sequence_locator file."""


import pandas
import pytest

from pygor.util.constant import set_separator
from pygor.util.io import read_csv_to_dataframe
from pygor.alignment.muscle_aligner import MuscleAligner
from pygor.cdr3.anchor_locator import AnchorLocator
from pygor.cdr3.sequence_locator import SequenceLocator


def create_alignment(filename):
    """Create an alignment to use for testing."""
    aligner = MuscleAligner(infile=filename)
    return aligner.get_muscle_alignment()


@pytest.mark.parametrize('files, expected', [
    (['tests/test_data/IGH_mus_musculus/aligns/indexed_sequences.csv',
      'tests/test_data/IGH_mus_musculus/aligns/V_alignments.csv',
      'tests/test_data/IGH_mus_musculus/aligns/J_alignments.csv',
      'tests/test_data/IGH_mus_musculus/ref_genomes/genomicVs.fasta',
      'tests/test_data/IGH_mus_musculus/ref_genomes/genomicJs.fasta'],
     pandas.DataFrame(
         [['V00770|IGHJ3*01|Mus musculus|F|J-REGION|766..813|48 nt|3| | | | |48+0=48| | |', 'TTT']],
         columns=['seq_index', 'sequence']))
])
def test_sequence_locator(files, expected):
    """Test if correct indices of conserved motif regions are returned.

    Parameters
    ----------
    files : list
        A list of strings with file path locations for the required files.
    expected : pandas.DataFrame
        The expected output pandas.Dataframe with correct columns and values.

    Raises
    -------
    AssertionError
        If the performed test failed.

    """
    # Set the separator and anchor locators for both V and J genes.
    set_separator(';')
    v_anchor = AnchorLocator(alignment=create_alignment(files[3]), gene='V')
    j_anchor = AnchorLocator(alignment=create_alignment(files[4]), gene='J')
    locator = SequenceLocator(seqs=read_csv_to_dataframe(files[0]),
                              v_align=read_csv_to_dataframe(files[1]),
                              j_align=read_csv_to_dataframe(files[2]))

    # Get the CDR3 sequences and check results.
    result = locator.get_cdr3_sequences(conserved_v_motif_indices=v_anchor.get_indices_motifs(),
                                        conserved_j_motif_indices=j_anchor.get_indices_motifs())
    print(result)
    print(expected)
    assert (result == expected).all().all()
